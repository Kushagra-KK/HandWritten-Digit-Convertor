# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lf8Yylr1P0RBpgVC5hNVb234Ntco4iJh
"""

# First mount Google Drive
from google.colab import drive
drive.mount('/content/drive')
!pip install streamlit tensorflow numpy matplotlib pyngrok
import streamlit as st
import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
import os

# Use relative path for deployment
model_path = '/content/drive/MyDrive/mnist_dcgan_generator.h5'

# Check if file exists
if not os.path.exists(model_path):
    st.error(f"Model file not found at: {model_path}")
    st.stop()

try:
    # Load generator model
    generator = tf.keras.models.load_model(model_path)
except Exception as e:
    st.error(f"Error loading model: {str(e)}")
    st.stop()

# App title
st.title('Handwritten Digit Generator')

# Digit selection
digit = st.selectbox('Select digit to generate', options=list(range(10)))
num_images = st.slider('Number of images', 1, 10, 5)

if st.button('Generate Images'):
    # Create latent vectors with digit conditioning
    latent_vectors = np.random.randn(num_images, 100)

    # Add digit conditioning
    latent_vectors[:, :10] = 0
    latent_vectors[:, digit] = 1

    try:
        # Generate images
        generated_images = generator.predict(latent_vectors)

        # Display images in a grid
        cols = st.columns(5)  # 5 columns layout
        for i, img in enumerate(generated_images):
            with cols[i % 5]:
                fig, ax = plt.subplots(figsize=(2, 2))
                ax.imshow(img[:, :, 0], cmap='gray')
                ax.axis('off')
                st.pyplot(fig)
                plt.close(fig)

    except Exception as e:
        st.error(f"Generation error: {str(e)}")